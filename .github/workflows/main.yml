name: MLflow CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train-log-and-dockerize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r MLProject/requirements.txt

      - name: Run MLflow Project
        run: |
          mlflow run MLProject --env-manager=local --experiment-name "Heart Disease Classification"

      - name: Debug List mlruns directory content
        run: |
          echo "Listing contents of mlruns directory recursively..."
          ls -lR mlruns

      - name: Get latest MLflow model artifact path
        id: get_model_path
        run: |
          MODEL_PATH=$(find mlruns -type d -path "*/model" | sort -r | head -n 1)
          echo "::set-output name=path::$MODEL_PATH"

      - name: Commit and push model artifact to GitHub
        run: |
          git config user.name 'github-actions'
          git config user.email 'github-actions@github.com'
          git add mlruns/*
          git commit -m 'Update model artifact from MLflow tracking' || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image from model
        run: |
          echo "MODEL_PATH is ${{ steps.get_model_path.outputs.path }}"
          mlflow models build-docker -m "${{ steps.get_model_path.outputs.path }}"

      - name: Push Docker image to Docker Hub
        run: |
          docker tag workflow-ci-model:latest daffablqs/workflow-ci:latest
          docker push daffablqs/workflow-ci:latest
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
