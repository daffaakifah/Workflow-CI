name: CI Build and Docker Push

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_REPOSITORY: daffablqs/workflow-ci
      MLFLOW_TRACKING_URI: file://${{ github.workspace }}/mlruns  # Explicit local tracking URI

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Miniconda and environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          activate-environment: mlflow-env
          environment-file: MLProject/conda.yaml
          python-version: 3.11
          use-mamba: true
          cache: true
          channels: conda-forge, defaults  

      - name: Verify Conda Environment Activation
        shell: bash -l {0}
        run: |
          conda info --envs
          echo "Active environment: $CONDA_DEFAULT_ENV"
          which python
          python --version

      - name: Install additional Python dependencies
        shell: bash -l {0}
        run: pip install dagshub mlflow

      - name: Debug Conda Environment
        shell: bash -l {0}
        run: conda list -n mlflow-env

      - name: Install Missing Conda Packages
        shell: bash -l {0}
        run: |
          conda install -n mlflow-env numpy matplotlib seaborn --yes

      - name: Debug package versions
        shell: bash -l {0}
        run: |
          python -c "import numpy; print('numpy:', numpy.__version__)"
          python -c "import matplotlib; print('matplotlib:', matplotlib.__version__)"
          python -c "import seaborn; print('seaborn:', seaborn.__version__)"
          python -c "import mlflow; print('mlflow:', mlflow.__version__)"
          python -c "import dagshub; print('dagshub:', dagshub.__version__)"

      - name: Initialize MLflow Experiment
        shell: bash -l {0}
        run: |
          # Ensure experiment ID 0 exists
          mlflow experiments list || true
          mlflow experiments create --experiment-id 0 --name "Default Experiment" 2> /dev/null || echo "Experiment already exists"
          mlflow experiments list

      - name: Run MLflow Project with modelling.py
        shell: bash -l {0}
        run: |
          mlflow run MLProject -e train -P script_name=modelling.py \
            --experiment-id 0 \
            --no-conda  # Use existing environment

      - name: Debug MLflow Experiment
        shell: bash -l {0}
        run: |
          mlflow experiments list
          mlflow runs list --experiment-id 0

      - name: Get latest MLflow run_id
        id: mlflow_run_id
        shell: bash -l {0}
        run: |
          RUN_ID=$(mlflow runs list --experiment-id 0 --order-by descending --max-results 1 --output json | jq -r '.[0].run_id')
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

      - name: Upload artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: ml-artifacts
          path: |
            MLProject/model
            MLProject/estimator.html
            MLProject/metric_info.json
            MLProject/training_confusion_matrix.png

      - name: Build Docker Image with MLflow
        shell: bash -l {0}
        run: mlflow build-docker -p MLProject -t $DOCKER_REPOSITORY:latest

      - name: Login to DockerHub
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Tag Docker Image
        run: docker tag $DOCKER_REPOSITORY:latest $DOCKER_REPOSITORY:$GITHUB_SHA

      - name: Push Docker Image
        run: |
          docker push $DOCKER_REPOSITORY:latest
          docker push $DOCKER_REPOSITORY:$GITHUB_SHA
